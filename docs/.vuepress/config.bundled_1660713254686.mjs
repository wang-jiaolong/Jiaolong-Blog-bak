// docs/.vuepress/config.ts
import { resolve } from "path";
import { defineConfig4CustomTheme } from "vuepress/config";
import dayjs from "dayjs";

// docs/.vuepress/config/htmlModules.ts
var htmlModule = {};
var htmlModules_default = htmlModule;

// docs/.vuepress/webSiteInfo/readFile.ts
import fs from "fs";
import path from "path";
import matter from "gray-matter";
import chalk from "chalk";
var log = console.log;
var docsRoot = path.join("D:\\MyWeb\\Jiaolong-Blog\\docs\\.vuepress\\webSiteInfo", "..", "..", "..", "docs");
function readFileList(excludeFiles = [""], dir = docsRoot, filesList = []) {
  const files = fs.readdirSync(dir);
  files.forEach((item, index) => {
    let filePath = path.join(dir, item);
    const stat = fs.statSync(filePath);
    if (!(excludeFiles instanceof Array)) {
      log(chalk.yellow(`error: \u4F20\u5165\u7684\u53C2\u6570\u4E0D\u662F\u4E00\u4E2A\u6570\u7EC4\u3002`));
    }
    excludeFiles.forEach((excludeFile) => {
      if (stat.isDirectory() && item !== ".vuepress" && item !== "@pages" && item !== excludeFile) {
        readFileList(excludeFiles, path.join(dir, item), filesList);
      } else {
        if (path.basename(dir) !== "docs") {
          const fileNameArr = path.basename(filePath).split(".");
          let name = null, type = null;
          if (fileNameArr.length === 2) {
            name = fileNameArr[0];
            type = fileNameArr[1];
          } else if (fileNameArr.length === 3) {
            name = fileNameArr[1];
            type = fileNameArr[2];
          } else {
            log(chalk.yellow(`warning: \u8BE5\u6587\u4EF6 "${filePath}" \u6CA1\u6709\u6309\u7167\u7EA6\u5B9A\u547D\u540D\uFF0C\u5C06\u5FFD\u7565\u751F\u6210\u76F8\u5E94\u6570\u636E\u3002`));
            return;
          }
          if (type === "md") {
            filesList.push({
              name,
              filePath
            });
          }
        }
      }
    });
  });
  return filesList;
}
function readEachFileWords(excludeFiles = [""], cn, en) {
  const filesListWords = [];
  const filesList = readFileList(excludeFiles);
  filesList.forEach((item) => {
    const content = getContent(item.filePath);
    console.log(item.filePath);
    let len = counter(content);
    let readingTime = readTime(len, cn, en);
    let wordsCount = 0;
    wordsCount = len[0] + len[1];
    if (wordsCount >= 1e3) {
      wordsCount = Math.round(wordsCount / 100) / 10 + "k";
    }
    const fileMatterObj = matter(content, {});
    const matterData = fileMatterObj.data;
    filesListWords.push({ ...item, wordsCount, readingTime, ...matterData });
  });
  return filesListWords;
}
function readTime(len, cn = 300, en = 160) {
  let readingTime = len[0] / cn + len[1] / en;
  if (readingTime > 60 && readingTime < 60 * 24) {
    let hour = Math.trunc(readingTime / 60);
    let minute = Math.trunc(readingTime - hour * 60);
    if (minute === 0) {
      return hour + "h";
    }
    return hour + "h" + minute + "m";
  } else if (readingTime > 60 * 24) {
    let day = Math.trunc(readingTime / (60 * 24));
    let hour = Math.trunc((readingTime - day * 24 * 60) / 60);
    if (hour === 0) {
      return day + "d";
    }
    return day + "d" + hour + "h";
  }
  return readingTime < 1 ? "1" : Math.trunc(readingTime * 10) / 10 + "m";
}
function getContent(filePath) {
  return fs.readFileSync(filePath, "utf8");
}
function counter(content) {
  const cn = (content.match(/[\u4E00-\u9FA5]/g) || []).length;
  const en = (content.replace(/[\u4E00-\u9FA5]/g, "").match(/[a-zA-Z0-9_\u0392-\u03c9\u0400-\u04FF]+|[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af\u0400-\u04FF]+|[\u00E4\u00C4\u00E5\u00C5\u00F6\u00D6]+|\w+/g) || []).length;
  return [cn, en];
}

// docs/.vuepress/config.ts
var config_default = defineConfig4CustomTheme({
  theme: resolve("D:\\MyWeb\\Jiaolong-Blog\\docs\\.vuepress", "../../vdoing"),
  locales: {
    "/": {
      lang: "zh-CN",
      title: "Jiaolong's blog",
      description: "\u8FD9\u91CC\u662F @Jiaolong \u7684\u4E2A\u4EBA\u535A\u5BA2\uFF0C\u4E0E\u4F60\u4E00\u8D77\u53D1\u73B0\u66F4\u5927\u7684\u4E16\u754C\u3002"
    }
  },
  themeConfig: {
    bodyBgImg: "/img/bg.jpg",
    indexImg: {
      navColor: 2,
      switchNavColor: true,
      bgTimeColor: true,
      bgTimeColorArray: ["transparent", "rgba(255, 148, 48, .2)", "rgba(0, 0, 0, .3)", "rgba(0, 0, 0, .5)"],
      descFade: false,
      desc: ["@Jiaolong \u7684\u4E2A\u4EBA\u535A\u5BA2\uFF0C\u4E0E\u4F60\u4E00\u8D77\u53D1\u73B0\u66F4\u5927\u7684\u4E16\u754C\u3002"],
      descFontSize: "1.5rem",
      descFadeInTime: 150,
      descFadeOutTime: 800,
      descNextTime: 800,
      bubble: false,
      bubblePosition: 0,
      bubbleNum: 200
    },
    bodyBgImgOpacity: 0.5,
    nav: [
      { text: "\u9996\u9875", link: "/" },
      {
        text: "\u6280\u672F\u6587\u6863",
        link: "/docs/",
        items: [
          {
            text: "",
            items: [
              { text: "SwiftUI", link: "/pages/011a00/" },
              { text: "Python", link: "/pages/358811/" }
            ]
          },
          {
            text: "",
            items: [
              { text: "Git", link: "/pages/169b33/" },
              { text: "FFmpeg", link: "/ffmpeg/" },
              { text: "Linux", link: "/pages/3c6974/" },
              { text: "Docker", link: "/pages/350bb6/" }
            ]
          }
        ]
      },
      {
        text: "\u5B66\u4E60\u7B14\u8BB0",
        items: [
          { text: "\u300A\u8BA1\u7B97\u673A\u7EC4\u6210\u4E0E\u8BBE\u8BA1\u300B", link: "/pages/0bb29a/" }
        ]
      },
      {
        text: "\u7D22\u5F15",
        link: "/archives/",
        items: [
          {
            text: "",
            items: [
              { text: "\u5F52\u6863", link: "/archives/" }
            ]
          },
          {
            text: "",
            items: [
              { text: "\u5206\u7C7B", link: "/categories/" }
            ]
          },
          {
            text: "",
            items: [
              { text: "\u6807\u7B7E", link: "/tags/" }
            ]
          }
        ]
      },
      {
        text: "\u6536\u85CF",
        link: "/favorite/website/",
        items: [
          {
            text: "",
            items: [
              { text: "\u7F51\u7AD9", link: "/favorite/website/" }
            ]
          },
          {
            text: "",
            items: [
              { text: "\u8F6F\u4EF6", link: "/favorite/software/" }
            ]
          }
        ]
      },
      { text: "\u5173\u4E8E", link: "/about/" }
    ],
    sidebarDepth: 2,
    logo: "/img/avatar.png",
    searchMaxSuggestions: 10,
    lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
    docsDir: "docs",
    editLinks: false,
    editLinkText: "\u7F16\u8F91",
    updateBar: {
      showToArticle: false,
      moreArticle: "/archives"
    },
    pageButton: false,
    sidebar: { mode: "structuring", collapsable: false },
    author: {
      name: "Jiaolong",
      link: "https://jiaolong.xyz"
    },
    blogger: {
      avatar: "/img/avatar.png",
      name: "Jiaolong",
      slogan: "\u65E0\u9650\u8FDB\u6B65"
    },
    social: {
      icons: [
        {
          iconClass: "icon-youjian",
          title: "\u53D1\u90AE\u4EF6",
          link: "mailto:jiaolong_wang@foxmail.com"
        },
        {
          iconClass: "icon-github",
          title: "GitHub",
          link: "https://github.com/wang-jiaolong/mythings_help"
        },
        {
          iconClass: "icon-weibo",
          title: "\u5FAE\u535A",
          link: "https://weibo.com/u/7521880154"
        }
      ]
    },
    footer: {
      createYear: 2021,
      copyrightInfo: "| Jiaolong Wang"
    },
    extendFrontmatter: {
      author: {
        name: "Jiaolong",
        link: "https://jiaolong.xyz"
      }
    },
    htmlModules: htmlModules_default,
    blogInfo: {
      blogCreate: "2022-07-20",
      indexView: true,
      pageView: true,
      readingTime: true,
      eachFileWords: readEachFileWords([""], 300, 160),
      mdFileCountType: "archives",
      totalWords: "archives",
      moutedEvent: ".tags-wrapper",
      indexIteration: 2500,
      pageIteration: 2500
    }
  },
  head: [
    ["link", { rel: "icon", href: "/img/favicon.ico" }],
    [
      "meta",
      {
        name: "keywords",
        content: "Jiaolong\uFF0CSoftware Engineer | \u8FD9\u91CC\u662F @Jiaolong \u7684\u4E2A\u4EBA\u535A\u5BA2\uFF0C\u4E0E\u4F60\u4E00\u8D77\u53D1\u73B0\u66F4\u5927\u7684\u4E16\u754C\u3002"
      }
    ],
    ["meta", { name: "baidu-site-verification", content: "7F55weZDDc" }],
    ["meta", { name: "theme-color", content: "#11a8cd" }],
    ["meta", { name: "referrer", content: "no-referrer-when-downgrade" }],
    ["link", { rel: "stylesheet", href: "https://at.alicdn.com/t/font_3077305_pt8umhrn4k9.css" }]
  ],
  plugins: [
    "vuepress-plugin-baidu-autopush",
    [
      "one-click-copy",
      {
        copySelector: ['div[class*="language-"] pre', 'div[class*="aside-code"] aside'],
        copyMessage: "\u590D\u5236\u6210\u529F",
        duration: 1e3,
        showInMobile: false
      }
    ],
    [
      "demo-block",
      {
        settings: {
          jsfiddle: false,
          codepen: true,
          horizontal: false
        }
      }
    ],
    [
      "vuepress-plugin-zooming",
      {
        selector: ".theme-vdoing-content img:not(.no-zoom)",
        options: {
          bgColor: "rgba(0,0,0,0.6)"
        }
      }
    ],
    [
      "@vuepress/last-updated",
      {
        transformer: (timestamp, lang) => {
          return dayjs(timestamp).format("YYYY/MM/DD, HH:mm:ss");
        }
      }
    ]
  ],
  markdown: {
    lineNumbers: true,
    extractHeaders: ["h2", "h3"]
  },
  extraWatchFiles: [
    ".vuepress/config.ts",
    ".vuepress/config/htmlModules.ts"
  ]
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
